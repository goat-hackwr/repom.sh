#!/bin/bash

# Climb The Info Tool by user777 (Final Version with Sound & Progress)

slow_print() {
  text="$1"
  delay=0.004
  for ((i=0; i<${#text}; i++)); do
    echo -n "${text:$i:1}"
    sleep $delay
  done
  echo
}

progress_bar() {
  echo -n "Starting"
  for i in {1..10}; do
    echo -n "."
    sleep 0.1
  done
  echo -e " Done!"
}

random_color() {
  local colors=("\e[1;31m" "\e[1;32m" "\e[1;33m" "\e[1;34m" "\e[1;35m" "\e[1;36m")
  echo -e "${colors[$RANDOM % ${#colors[@]}]}"
}

banner() {
  color=$(random_color)
  clear
  echo -e "$color"
  echo "          +hydNNNNdyh+"
  echo "        +mMMMMMMMMMMMMm+"
  echo "      \`dMMm:NMMMMMMN:mMMd\`"
  echo "      hMMMMMMMMMMMMMMMMMMh"
  echo "    ..yyyyyyyyyyyyyyyyyyyy.."
  echo ".mMMm\`MMMMMMMMMMMMMMMMMM\`mMMm."
  echo ":MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:"
  echo ":MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:"
  echo ":MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:"
  echo " +yy+ MMMMMMMMMMMMMMMMMMMM +yy+"
  echo "       mMMMMMMMMMMMMMMMMMMm"
  echo "       \`/++MMMMh++hMMMM++/\`"
  echo "           MMMMo  oMMMM"
  echo "           MMMMo  oMMMM"
  echo "           oNMm-  -mMNs"
  echo -e "\e[0m"
  echo -e "$color──────────────────────────────────────────────────────────────\e[0m"
  slow_print "        Climb The Info - Ethical Hacking Suite"
  echo -e "$color──────────────────────────────────────────────────────────────\e[0m"
}

prompt_device_info() {
  echo -e "\n\033[1;30m[!] Your Device Info:\033[0m"
  termux-info | grep -E 'Device|Model|Android' || echo "  (Unable to fetch device info)"
  echo
}

menu() {
  echo -e "\e[1;34mAvailable Tools:\e[0m"
  printf "%-4s %-30s %-20s\n" "[1]"  "Riple + Hunda"           "riop.sh + hydri.sh"
  printf "%-4s %-30s %-20s\n" "[2]"  "SnapPic"                  "saypic.sh"
  printf "%-4s %-30s %-20s\n" "[3]"  "TUSO + S-DETECT"          "tuso.sh + sdu.sh"
  printf "%-4s %-30s %-20s\n" "[4]"  "FindLock UserHunter"      "findlock.sh"
  printf "%-4s %-30s %-20s\n" "[5]"  "Hackermode Tool Hub"      "hackermode.sh"
  printf "%-4s %-30s %-20s\n" "[6]"  "ReconX (RED_HAWK)"        "reconx.sh"
  printf "%-4s %-30s %-20s\n" "[7]"  "SQLex (SQLMap)"           "sqlex.sh"
  printf "%-4s %-30s %-20s\n" "[8]"  "IPSpy"                    "ipspy.sh"
  printf "%-4s %-30s %-20s\n" "[9]"  "Porty (Nmap)"             "porty.sh"
  printf "%-4s %-30s %-20s\n" "[10]" "PassX (cupp)"             "passx.sh"
  printf "%-4s %-30s %-20s\n" "[11]" "Update Climb the Info"
  printf "%-4s %-30s %-20s\n" "[0]"  "Exit"
}

# Launchers with progress
riple_hunda_tool() { progress_bar; bash riop.sh && bash hydri.sh; }
snap_pic() { progress_bar; bash saypic.sh; }
tuso_detect_tool() { progress_bar; bash tuso.sh && bash sdu.sh; }
findlock_tool() {
  progress_bar
  [ ! -d "findlock" ] && git clone https://github.com/sherlock-project/sherlock findlock
  cd findlock && python3 sherlock.py user777 && cd ..
}
hackermode_tool() {
  progress_bar
  git clone https://github.com/noob-hackers/hackermode tempmode
  cd tempmode && bash hackermode.sh && cd .. && rm -rf tempmode
}
reconx_tool() { progress_bar; bash reconx.sh; }
sqlex_tool() { progress_bar; bash sqlex.sh; }
ipspy_tool() { progress_bar; bash ipspy.sh; }
porty_tool() { progress_bar; bash porty.sh; }
passx_tool() { progress_bar; bash passx.sh; }
update_tool() {
  progress_bar
  echo -e "\nUpdating from GitHub..."
  git clone git@github.com:goat-hackwer/repom.sh update_repo
  cp update_repo/climb.sh climb.sh && chmod +x climb.sh
  rm -rf update_repo
  echo "Updated successfully."
}

play_gay_sound() {
  if [ -f "gay.mp3" ]; then
    mpv gay.mp3 >/dev/null 2>&1
  else
    echo -e "\nGay (but missing gay.mp3 sound file)"
  fi
}

# Main Execution
banner
prompt_device_info
menu

echo -ne "\nEnter your choice (0–11): "
read choice

case $choice in
  1) riple_hunda_tool ;;
  2) snap_pic ;;
  3) tuso_detect_tool ;;
  4) findlock_tool ;;
  5) hackermode_tool ;;
  6) reconx_tool ;;
  7) sqlex_tool ;;
  8) ipspy_tool ;;
  9) porty_tool ;;
  10) passx_tool ;;
  11) update_tool ;;
  0) echo -e "\nGoodbye.\n" ;;
  *) play_gay_sound ;;
esac

echo -e "\e[1;90m──────────────────────────────────────────────\e[0m"
slow_print "                 Made with precision by user777"
echo -e "\e[1;90m──────────────────────────────────────────────\e[0m"

